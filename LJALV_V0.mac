!!                                                                                                !!
!! 1. DADOS DE ENTRADA                                                                            !!
!!                                                                                                !!
L=12
w=0.9
h=0.3
d=0.2
yo=h/2
yi=0.03
ys=0
b=0.1

fck=50e6
vc=0.2
pc=2500

Es=2e11
fy=250e6
vs=0.3
ps=7850

Load=1e7
LoadPos=2.5*h
L=LoadPos*2

MinESize=100e-3
ForceESize=0

SubstepCount=100




!!                                                                                                !!
!! 2. DEFINIÇÕES PRELIMINARES                                                                     !!
!!                                                                                                !!
/prep7

! Números dos keypoints
*get,MaxKP,KP,,NUM,MAXD
KP1=MaxKP+1
KP2=MaxKP+2
KP3=MaxKP+3
KP4=MaxKP+4

! Coordenadas da origem
x0=0
y0=0
z0=0

! Distância entre eixos de aberturas consecutivas
e=d+b

! Calcular posição da distribuição de aberturas
FITARR,w,d,b
n=FITARR_VAR_n
P0=FITARR_VAR_P0

! Calcular posição da distribuição de armaduras
FITARR,w,0,e,,,-1
ns=FITARR_VAR_n
P0s=FITARR_VAR_P0

! Definições dos elementos
TYPE_SOLID=1
TYPE_BEAM=2
TYPE_SHELL=3
TYPE_LINK=4
!TYPE_SOLID_num=185
TYPE_SOLID_num=65
TYPE_BEAM_num=188
TYPE_SHELL_num=181
TYPE_LINK_num=181

! Definições dos materiais
! Concreto
Ec=4760*SQRT(fck/1e6)*1e6
MAT_Concreto_fctm=0.3*SQRT(fck/1e6)*1e6
fc5=fck
fc1=0.3*fc5
epsilon0=2*fc5/Ec
epsilon1=fc1/Ec
deltaEpsilon=(epsilon0-epsilon1)/4
epsilon2=epsilon1+deltaEpsilon
epsilon3=epsilon2+deltaEpsilon
epsilon4=epsilon3+deltaEpsilon
fc2=(Ec*epsilon2)/(1+((epsilon2/epsilon0)**2))
fc3=(Ec*epsilon3)/(1+((epsilon3/epsilon0)**2))
fc4=(Ec*epsilon4)/(1+((epsilon4/epsilon0)**2))
MAT_Concreto=1
MAT_Concreto_E=Ec
MAT_Concreto_fck=fck
MAT_Concreto_dens=pc
MAT_Concreto_Poisson=vc
MAT_Concreto_ptCount=5
*del,MAT_Concreto_sigma
*dim,MAT_Concreto_sigma,ARRAY,MAT_Concreto_ptCount
MAT_Concreto_sigma(1)=fc1,fc2,fc3,fc4,fc5
*del,MAT_Concreto_epsilon
*dim,MAT_Concreto_epsilon,ARRAY,MAT_Concreto_ptCount
MAT_Concreto_epsilon(1)=epsilon1,epsilon2,epsilon3,epsilon4,epsilon0
! Aço
MAT_Rebar=2
MAT_Rebar_E=Es
MAT_Rebar_Poisson=vs
MAT_Rebar_dens=ps
MAT_Rebar_fy=fy

! Definir elementos
!ET,TYPE_SOLID,TYPE_SOLID_num,,1
ET,TYPE_SOLID,TYPE_SOLID_num
ET,TYPE_BEAM,TYPE_BEAM_num
ET,TYPE_SHELL,TYPE_SHELL_num
ET,TYPE_LINK,TYPE_LINK_num

! Definir materiais
MPTEMP
MPTEMP,MAT_Concreto,0
MP,EX,MAT_Concreto,MAT_Concreto_E
MP,PRXY,MAT_Concreto,MAT_Concreto_Poisson
MP,DENS,MAT_Concreto,MAT_Concreto_dens
TB,CONCR,MAT_Concreto,1,9
TBTEMP,0
TBDATA,,0.3,0.8,MAT_Concreto_fctm,-1
TBDATA
TB,MISO,MAT_Concreto,,MAT_Concreto_ptCount
TBTEMP,0
*do,nthPt,1,MAT_Concreto_ptCount,1
   strain=MAT_Concreto_epsilon(nthPt)
   stress=MAT_Concreto_sigma(nthPt)
   TBPT,DEFI,strain,stress
*enddo
MP,EX,MAT_Rebar,MAT_Rebar_E
MP,PRXY,MAT_Rebar,MAT_Rebar_Poisson
MP,DENS,MAT_Rebar,MAT_Rebar_dens



!!                                                                                                !!
!! 3. SOLID MODEL                                                                                 !!
!!                                                                                                !!
! Desenhar face inicial (esquerda) da laje
K, KP1, x0, y0,   z0
K, KP2, x0, y0,   z0+w
K, KP3, x0, y0+h, z0+w
K, KP4, x0, y0+h, z0

! Criar área da face esquerda
A,KP1,KP2,KP3,KP4

! Fatiar laje na posição vertical da armadura inferior
*if,yi,NE,0,THEN
   SLICEXZ, y0+yi, x0, z0, x0+1, z0+w
*endif
! Fatiar laje na posição vertical da armadura superior
*if,ys,NE,0,THEN
   SLICEXZ, y0+h-ys, x0, z0, x0+1, z0+w
*endif

! Fatir laje nas posições horizontais da armadura
*do,nthReinf,1,ns,1
   zPos=P0s+e*(nthReinf-1)
   *if,zPos,NE,z0,AND,zPos,NE,z0+w,THEN
      SLICEXY, zPos, x0-L, y0-h, x0+2*L, y0+2*h
   *endif
*enddo

! Fatiar laje verticalmente nos vértices das circunferências
*do,nthOp,1,n,1
   zPos=P0+(nthOp-1)*e
   z1=zPos-(d/2)
   z2=zPos+(d/2)
   SLICEXY,z1-(b/10),x0-L,y0-h,x0+2*L,y0+2*h
   SLICEXY,z2+(b/10),x0-L,y0-h,x0+2*L,y0+2*h
*enddo

! Criar componente com áreas da face
CM,COMPA_Face,AREA
ASEL,U,AREA,,ALL

! Criar primeira abertura circular
WPROTA,,,-90
CYL4,P0,yo,d/2
WPROTA,,,90

! Criar componente com áreas circulares
*get,CircularArea,AREA,,NUM,MIN
AGEN,n,CircularArea,,,,,e
CM,COMPA_CircAreas,AREA

! Cortar aberturas
ALLSEL
ASBA,COMPA_Face,COMPA_CircAreas,,DELETE,DELETE

! Reorientar áreas
*get,AMin,AREA,,NUM,MIN
*get,L1,AREA,AMin,LOOP,1,LINE,1
*get,L2,AREA,AMin,LOOP,1,LINE,2
*get,L3,AREA,AMin,LOOP,1,LINE,3
*get,K11,LINE,L1,KP,1
*get,K21,LINE,L2,KP,1
*get,K31,LINE,L3,KP,1
*get,K12,LINE,L1,KP,2
*get,K22,LINE,L2,KP,2
*get,K32,LINE,L3,KP,2
K1=K11
*if,K1,EQ,K21,THEN
   K2=K22
*else
   K2=K21
*endif
*if,K1,EQ,K31,OR,K2,EQ,K31,THEN
   K3=K32
*else
   K3=K31
*endif
XNorm=NORMKX(K1,K2,K3)
*if,XNorm,LT,0,THEN
   AREVERSE,AMin
*endif
ALLSEL
ANORM,AMin

! Criar volume da laje
*get,AMAXD,AREA,,NUM,MAXD
NUMSTR,AREA,AMAXD+1
*get,ACount,AREA,,COUNT
ANum=0
*do,nthArea,1,ACount,1
   ANum=ARNEXT(ANum)
   VOFFST,ANum,LoadPos
*enddo
ALLSEL
*get,AMAXD,AREA,,NUM,MAXD
NUMSTR,AREA,AMAXD+1
ASEL,S,LOC,X,x0+LoadPos
*get,ACount,AREA,,COUNT
ANum=0
*do,nthArea,1,ACount,1
   ANum=ARNEXT(ANum)
   VOFFST,ANum,LoadPos-L
*enddo

! Mesclar entidades do solid model
ALLSEL
NUMMRG,KP



!!                                                                                                !!
!! 4. FINITE ELEMENT MODEL                                                                        !!
!!                                                                                                !!
ALLSEL

! Determinar dimensão do elemento
*if,ForceESize,EQ,1,THEN
   ESizeEff=MinESize
*else
   ESize1=w/50
   ESize2=h/10
   ESize3=d/6
   ESize4=b/4
   ESize5=(h-d)/3
   *del,ESizeArr
   *dim,ESizeArr,ARRAY,5
   ESizeArr(1)=ESize1,ESize2,ESize3,ESize4,ESize5
   *vscfun,ESizeEff,MIN,ESizeArr
*endif

! Criar malha
ALLSEL
VATT,MAT_Concreto,,TYPE_SOLID
ESIZE,ESizeEff

! Criar componente com volumes regulares
ALLSEL
*do,nthOp,1,n,1
   zPos=P0+(nthOp-1)*e
   z1=zPos-(d/2)
   z2=zPos+(d/2)
   VSEL,U,LOC,Z,z1-(b/10),z2+(b/10)
*enddo
CM,COMPV_Regular,VOLU

! Criar componente com volumes irregulares
ALLSEL
CMSEL,U,COMPV_Regular
CM,COMPV_Irregular,VOLU

ALLSEL

!CMSEL,S,COMPV_Regular
MSHKEY,1
MSHAPE,0,3d
VMESH,COMPV_Regular
MSHKEY,0
MSHAPE,1,3d
VMESH,COMPV_Irregular

ALLSEL
VIEW4W
EPLOT



!!                                                                                                !!
!! 5. CARGAS & APOIOS                                                                             !!
!!                                                                                                !!
ALLSEL

! Apoio esquerdo
NSEL,S,LOC,X,x0
NSEL,R,LOC,Y,y0
D,ALL,UY,0,,,,UZ,UX

! Apoio direito
NSEL,S,LOC,X,x0+L
NSEL,R,LOC,Y,y0
D,ALL,UY,0,,,,UZ

! Carga concentrada
NSEL,S,LOC,X,x0+LoadPos
NSEL,R,LOC,Y,y0+h
*get,NodeCount,NODE,,COUNT
NodalLoad=Load/NodeCount
F,ALL,FY,-NodalLoad



!!                                                                                                !!
!! 6. SOLUÇÃO                                                                                     !!
!!                                                                                                !!
/eof
ALLSEL
/solu
ANTYPE,0
NLGEOM,On
NSUBST,SubstepCount,SubstepCount*2,SubstepCount/2
NROPT,FULL
OUTRES,ERASE
OUTRES,ALL,ALL
!SOLVE  !






